<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>aws on Muhannad.0</title><link>https://muhannad0.github.io/tags/aws/</link><description>Recent content in aws on muhannad0.github.io</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Vitae theme for Hugo</copyright><lastBuildDate>Sun, 19 Jul 2020 00:54:48 +0500</lastBuildDate><atom:link href="https://muhannad0.github.io/tags/aws/index.xml" rel="self" type="application/rss+xml"/><item><title>Using Moto to mock test AWS services: A DynamoDB Example</title><link>https://muhannad0.github.io/post/using-moto-to-mock-test-aws-a-dynamodb-example/</link><pubDate>Sun, 19 Jul 2020 00:54:48 +0500</pubDate><guid>https://muhannad0.github.io/post/using-moto-to-mock-test-aws-a-dynamodb-example/</guid><description>
Recently, I had to write some tests for functions that called AWS services in Python. I found the 'moto' library which provides mocks for a lot of the AWS services for your tests. This is a basic example of using moto to test DynamoDB operations.</description></item><item><title>Building a Serverless Telegram Bot on AWS</title><link>https://muhannad0.github.io/post/serverless-telegram-bot-on-aws/</link><pubDate>Sun, 21 Jun 2020 00:34:19 +0500</pubDate><guid>https://muhannad0.github.io/post/serverless-telegram-bot-on-aws/</guid><description>
Iâ€™ve always wanted to try out to build a small chat bot. So, I decided to take a serverless approach to it.</description></item><item><title>Completing the Cloud Resume Challenge</title><link>https://muhannad0.github.io/post/completing-the-cloudresumechallenge/</link><pubDate>Mon, 15 Jun 2020 00:25:13 +0500</pubDate><guid>https://muhannad0.github.io/post/completing-the-cloudresumechallenge/</guid><description>
Mission Accomplished! I'd like to share how I was able to tick off all the tasks on the #CloudResumeChallenge.</description></item><item><title>Phase 4: Using Infra as Code on AWS</title><link>https://muhannad0.github.io/post/phase4-using-infra-as-code-cloudresumechallenge/</link><pubDate>Fri, 12 Jun 2020 14:31:06 +0500</pubDate><guid>https://muhannad0.github.io/post/phase4-using-infra-as-code-cloudresumechallenge/</guid><description>
Phase 4 of #CloudResumeChallenge where I try to deploy to AWS using infra-as-code. During the initial work to develop the resume website, I used the console to set things up. But knowing how to define them in a configuration file and use one or two commands to deploy all of it automatically, that saves a lot of time.</description></item><item><title>Phase 3: Building a Site Visit Counter with AWS API Gateway / Lambda / DynamoDB</title><link>https://muhannad0.github.io/post/phase3-build-site-visit-counter-apigateway-lambda-dynamodb-cloudresumechallenge/</link><pubDate>Fri, 05 Jun 2020 14:46:58 +0500</pubDate><guid>https://muhannad0.github.io/post/phase3-build-site-visit-counter-apigateway-lambda-dynamodb-cloudresumechallenge/</guid><description>
Phase 3 of #CloudResumeChallenge where I develop a small application to handle a visit counter. This one was a huge learning curve for me and I share how I attempted to complete the task.</description></item><item><title>Phase 2: Host a website on AWS S3</title><link>https://muhannad0.github.io/post/phase2-host-website-on-aws-s3-cloudresumechallenge/</link><pubDate>Sat, 09 May 2020 01:02:18 +0500</pubDate><guid>https://muhannad0.github.io/post/phase2-host-website-on-aws-s3-cloudresumechallenge/</guid><description>
Phase 2 of #CloudResumeChallenge where I work to host a website on AWS.</description></item></channel></rss>