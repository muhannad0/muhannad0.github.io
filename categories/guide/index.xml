<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>guide on Muhannad.0</title><link>https://muhannad0.github.io/categories/guide/</link><description>Recent content in guide on muhannad0.github.io</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Vitae theme for Hugo</copyright><lastBuildDate>Thu, 08 Oct 2020 06:50:59 +0500</lastBuildDate><atom:link href="https://muhannad0.github.io/categories/guide/index.xml" rel="self" type="application/rss+xml"/><item><title>Building Cloud Infra Using Terraform Modules - Part 1 (Concept of Modules)</title><link>https://muhannad0.github.io/post/building-cloud-infra-using-terraform-modules-part1-modules-concept/</link><pubDate>Thu, 08 Oct 2020 06:50:59 +0500</pubDate><guid>https://muhannad0.github.io/post/building-cloud-infra-using-terraform-modules-part1-modules-concept/</guid><description>
In this post, I explain how we can make use of Terraform modules to create reusable and flexible configurations to build cloud infrastructure. This is more of an overview of the concept and usage of modules. There will definitely be more with details of the actual implementation.</description></item><item><title>AWS CloudFormation and Ansible: Provision and Configure EC2 Instances</title><link>https://muhannad0.github.io/post/cloudformation-and-ansible-provision-and-configure/</link><pubDate>Fri, 14 Aug 2020 03:56:37 +0500</pubDate><guid>https://muhannad0.github.io/post/cloudformation-and-ansible-provision-and-configure/</guid><description>
An explainer of how I used Ansible and CloudFormation to deploy and configure EC2 instances on AWS.</description></item><item><title>Using Moto to mock test AWS services: A DynamoDB Example</title><link>https://muhannad0.github.io/post/using-moto-to-mock-test-aws-a-dynamodb-example/</link><pubDate>Sun, 19 Jul 2020 00:54:48 +0500</pubDate><guid>https://muhannad0.github.io/post/using-moto-to-mock-test-aws-a-dynamodb-example/</guid><description>
Recently, I had to write some tests for functions that called AWS services in Python. I found the 'moto' library which provides mocks for a lot of the AWS services for your tests. This is a basic example of using moto to test DynamoDB operations.</description></item><item><title>Local Development Using Serverless Framework</title><link>https://muhannad0.github.io/post/local-development-using-serverless-framework/</link><pubDate>Thu, 09 Jul 2020 02:17:26 +0500</pubDate><guid>https://muhannad0.github.io/post/local-development-using-serverless-framework/</guid><description>
A guide to setting up a local development environment for building serverless applications using the Serverless Framework</description></item><item><title>Building a Serverless Telegram Bot on AWS</title><link>https://muhannad0.github.io/post/serverless-telegram-bot-on-aws/</link><pubDate>Sun, 21 Jun 2020 00:34:19 +0500</pubDate><guid>https://muhannad0.github.io/post/serverless-telegram-bot-on-aws/</guid><description>
Iâ€™ve always wanted to try out to build a small chat bot. So, I decided to take a serverless approach to it.</description></item><item><title>Completing the Cloud Resume Challenge</title><link>https://muhannad0.github.io/post/completing-the-cloudresumechallenge/</link><pubDate>Mon, 15 Jun 2020 00:25:13 +0500</pubDate><guid>https://muhannad0.github.io/post/completing-the-cloudresumechallenge/</guid><description>
Mission Accomplished! I'd like to share how I was able to tick off all the tasks on the #CloudResumeChallenge.</description></item><item><title>Phase 5: Setting up CI/CD with Github Actions</title><link>https://muhannad0.github.io/post/phase5-cicd-with-github-actions-cloudresumechallenge/</link><pubDate>Sun, 14 Jun 2020 01:30:43 +0500</pubDate><guid>https://muhannad0.github.io/post/phase5-cicd-with-github-actions-cloudresumechallenge/</guid><description>
Phase 5 of the #CloudResumeChallenge where I make use of Github Actions to run tests and deployments when an update is pushed to the code repository.</description></item><item><title>Phase 3: Building a Site Visit Counter with AWS API Gateway / Lambda / DynamoDB</title><link>https://muhannad0.github.io/post/phase3-build-site-visit-counter-apigateway-lambda-dynamodb-cloudresumechallenge/</link><pubDate>Fri, 05 Jun 2020 14:46:58 +0500</pubDate><guid>https://muhannad0.github.io/post/phase3-build-site-visit-counter-apigateway-lambda-dynamodb-cloudresumechallenge/</guid><description>
Phase 3 of #CloudResumeChallenge where I develop a small application to handle a visit counter. This one was a huge learning curve for me and I share how I attempted to complete the task.</description></item><item><title>Using Docker to Setup Environments Quickly for Coding</title><link>https://muhannad0.github.io/post/using-docker-to-setup-env-quickly-for-coding/</link><pubDate>Tue, 26 May 2020 03:14:36 +0500</pubDate><guid>https://muhannad0.github.io/post/using-docker-to-setup-env-quickly-for-coding/</guid><description>
Preparing your machine for dev work is always a time consuming thing. It sometimes gets in the way of trying to do the actual thing you set out to do. I want to share how I got started with learning a new language, framework etc without having to spend much time setting things up.</description></item><item><title>Phase 2: Host a website on AWS S3</title><link>https://muhannad0.github.io/post/phase2-host-website-on-aws-s3-cloudresumechallenge/</link><pubDate>Sat, 09 May 2020 01:02:18 +0500</pubDate><guid>https://muhannad0.github.io/post/phase2-host-website-on-aws-s3-cloudresumechallenge/</guid><description>
Phase 2 of #CloudResumeChallenge where I work to host a website on AWS.</description></item><item><title>Using Github Actions to Deploy My Blog</title><link>https://muhannad0.github.io/post/using-github-actions-to-deploy-my-blog/</link><pubDate>Tue, 28 Apr 2020 14:44:29 +0500</pubDate><guid>https://muhannad0.github.io/post/using-github-actions-to-deploy-my-blog/</guid><description>
In this post I'm going to explain how I'm deploying changes to this website using Github Actions.</description></item></channel></rss>